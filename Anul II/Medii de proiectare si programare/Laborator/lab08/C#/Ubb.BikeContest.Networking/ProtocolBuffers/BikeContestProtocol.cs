// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: BikeContestProtocol.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Com.Ubb.Protocolbuffers {

  /// <summary>Holder for reflection information generated from BikeContestProtocol.proto</summary>
  public static partial class BikeContestProtocolReflection {

    #region Descriptor
    /// <summary>File descriptor for BikeContestProtocol.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static BikeContestProtocolReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChlCaWtlQ29udGVzdFByb3RvY29sLnByb3RvEhdjb20udWJiLnByb3RvY29s",
            "YnVmZmVycyJmCgtQYXJ0aWNpcGFudBIKCgJpZBgBIAEoAxIRCglmaXJzdE5h",
            "bWUYAiABKAkSEAoIbGFzdE5hbWUYAyABKAkSFgoOZW5naW5lQ2FwYWNpdHkY",
            "BCABKAUSDgoGdGVhbUlEGAUgASgDIjgKBFJhY2USCgoCaWQYASABKAMSDAoE",
            "bmFtZRgCIAEoCRIWCg5lbmdpbmVDYXBhY2l0eRgDIAEoBSJ/CglSYWNlRW50",
            "cnkSCgoCaWQYASABKAMSOQoLcGFydGljaXBhbnQYAiABKAsyJC5jb20udWJi",
            "LnByb3RvY29sYnVmZmVycy5QYXJ0aWNpcGFudBIrCgRyYWNlGAMgASgLMh0u",
            "Y29tLnViYi5wcm90b2NvbGJ1ZmZlcnMuUmFjZSIgCgRUZWFtEgoKAmlkGAEg",
            "ASgDEgwKBG5hbWUYAiABKAkiTQoEVXNlchIKCgJpZBgBIAEoAxIQCgh1c2Vy",
            "bmFtZRgCIAEoCRIQCghmdWxsTmFtZRgDIAEoCRIVCg1wYXNzd29yZFRva2Vu",
            "GAQgASgJIkUKB1JhY2VEVE8SDAoEbmFtZRgBIAEoCRIWCg5lbmdpbmVDYXBh",
            "Y2l0eRgCIAEoBRIUCgxwYXJ0aWNpcGFudHMYAyABKAUi1AYKEkJpa2VDb250",
            "ZXN0UmVxdWVzdBI+CgR0eXBlGAEgASgOMjAuY29tLnViYi5wcm90b2NvbGJ1",
            "ZmZlcnMuQmlrZUNvbnRlc3RSZXF1ZXN0LlR5cGUSEAoIdXNlcm5hbWUYAiAB",
            "KAkSFQoNcGFzc3dvcmRUb2tlbhgDIAEoCRIrCgR1c2VyGAQgASgLMh0uY29t",
            "LnViYi5wcm90b2NvbGJ1ZmZlcnMuVXNlchI5CgtwYXJ0aWNpcGFudBgFIAEo",
            "CzIkLmNvbS51YmIucHJvdG9jb2xidWZmZXJzLlBhcnRpY2lwYW50EjcKC3Jh",
            "Y2VFbnRyaWVzGAYgAygLMiIuY29tLnViYi5wcm90b2NvbGJ1ZmZlcnMuUmFj",
            "ZUVudHJ5EisKBHJhY2UYByABKAsyHS5jb20udWJiLnByb3RvY29sYnVmZmVy",
            "cy5SYWNlEisKBHRlYW0YCCABKAsyHS5jb20udWJiLnByb3RvY29sYnVmZmVy",
            "cy5UZWFtEg4KBnJhY2VJRBgJIAEoAxIOCgZ0ZWFtSUQYCiABKAMSEAoIcmFj",
            "ZU5hbWUYCyABKAkSFgoOZW5naW5lQ2FwYWNpdHkYDCABKAUSEAoIdGVhbU5h",
            "bWUYDSABKAkSFQoNcGFydGljaXBhbnRJRBgOIAEoAyLmAgoEVHlwZRILCgdV",
            "bmtub3duEAASCQoFTG9naW4QARIKCgZMb2dvdXQQAhIVChFDcmVhdGVQYXJ0",
            "aWNpcGFudBADEhUKEUNyZWF0ZVJhY2VFbnRyaWVzEAQSDgoKQ3JlYXRlUmFj",
            "ZRAFEg4KCkNyZWF0ZVRlYW0QBhIUChBHZXRFbnRyaWVzQnlSYWNlEAcSGAoU",
            "R2V0UGFydGljaXBhbnRCeURhdGEQCBIZChVHZXRQYXJ0aWNpcGFudHNCeVRl",
            "YW0QCRITCg9HZXRQYXJ0aWNpcGFudHMQChIRCg1HZXRSYWNlQnlOYW1lEAsS",
            "HAoYR2V0UmFjZXNCeUVuZ2luZUNhcGFjaXR5EAwSIAocR2V0UmFjZXNXaXRo",
            "UGFydGljaXBhbnRDb3VudBANEhEKDUdldFRlYW1CeU5hbWUQDhIMCghHZXRU",
            "ZWFtcxAPEhgKFEdldFVucmVnaXN0ZXJlZFJhY2VzEBAi/QYKE0Jpa2VDb250",
            "ZXN0UmVzcG9uc2USPwoEdHlwZRgBIAEoDjIxLmNvbS51YmIucHJvdG9jb2xi",
            "dWZmZXJzLkJpa2VDb250ZXN0UmVzcG9uc2UuVHlwZRI6CgxwYXJ0aWNpcGFu",
            "dHMYAiADKAsyJC5jb20udWJiLnByb3RvY29sYnVmZmVycy5QYXJ0aWNpcGFu",
            "dBIsCgV0ZWFtcxgDIAMoCzIdLmNvbS51YmIucHJvdG9jb2xidWZmZXJzLlRl",
            "YW0SMwoHZW50cmllcxgEIAMoCzIiLmNvbS51YmIucHJvdG9jb2xidWZmZXJz",
            "LlJhY2VFbnRyeRIUCgxlcnJvck1lc3NhZ2UYBSABKAkSOQoLcGFydGljaXBh",
            "bnQYBiABKAsyJC5jb20udWJiLnByb3RvY29sYnVmZmVycy5QYXJ0aWNpcGFu",
            "dBIxCgdyYWNlRFRPGAcgASgLMiAuY29tLnViYi5wcm90b2NvbGJ1ZmZlcnMu",
            "UmFjZURUTxIrCgR0ZWFtGAggASgLMh0uY29tLnViYi5wcm90b2NvbGJ1ZmZl",
            "cnMuVGVhbRIrCgR1c2VyGAkgASgLMh0uY29tLnViYi5wcm90b2NvbGJ1ZmZl",
            "cnMuVXNlchIrCgRyYWNlGAogASgLMh0uY29tLnViYi5wcm90b2NvbGJ1ZmZl",
            "cnMuUmFjZRIsCgVyYWNlcxgLIAMoCzIdLmNvbS51YmIucHJvdG9jb2xidWZm",
            "ZXJzLlJhY2USMgoIcmFjZXNEVE8YDCADKAsyIC5jb20udWJiLnByb3RvY29s",
            "YnVmZmVycy5SYWNlRFRPIpgCCgRUeXBlEgsKB1Vua25vd24QABIGCgJPaxAB",
            "EhMKD0FsbFBhcnRpY2lwYW50cxACEgwKCEFsbFRlYW1zEAMSEQoNRW50cmll",
            "c0J5UmFjZRAEEgkKBUVycm9yEAUSGQoVR2V0UGFydGljaXBhbnRzQnlUZWFt",
            "EAYSEgoOTmV3UGFydGljaXBhbnQQBxILCgdOZXdSYWNlEAgSCwoHTmV3VGVh",
            "bRAJEhIKDkdldFBhcnRpY2lwYW50EAoSDgoKUmFjZUJ5TmFtZRALEhMKD1Jh",
            "Y2VzQnlDYXBhY2l0eRAMEhkKFVJhY2VzV2l0aFBhcnRpY2lwYW50cxANEgsK",
            "B0dldFRlYW0QDhIQCgxVcGRhdGVkUmFjZXMQD0IuChdjb20udWJiLnByb3Rv",
            "Y29sYnVmZmVyc0ITQmlrZUNvbnRlc3RQcm90b2NvbGIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Ubb.Protocolbuffers.Participant), global::Com.Ubb.Protocolbuffers.Participant.Parser, new[]{ "Id", "FirstName", "LastName", "EngineCapacity", "TeamID" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Ubb.Protocolbuffers.Race), global::Com.Ubb.Protocolbuffers.Race.Parser, new[]{ "Id", "Name", "EngineCapacity" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Ubb.Protocolbuffers.RaceEntry), global::Com.Ubb.Protocolbuffers.RaceEntry.Parser, new[]{ "Id", "Participant", "Race" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Ubb.Protocolbuffers.Team), global::Com.Ubb.Protocolbuffers.Team.Parser, new[]{ "Id", "Name" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Ubb.Protocolbuffers.User), global::Com.Ubb.Protocolbuffers.User.Parser, new[]{ "Id", "Username", "FullName", "PasswordToken" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Ubb.Protocolbuffers.RaceDTO), global::Com.Ubb.Protocolbuffers.RaceDTO.Parser, new[]{ "Name", "EngineCapacity", "Participants" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Ubb.Protocolbuffers.BikeContestRequest), global::Com.Ubb.Protocolbuffers.BikeContestRequest.Parser, new[]{ "Type", "Username", "PasswordToken", "User", "Participant", "RaceEntries", "Race", "Team", "RaceID", "TeamID", "RaceName", "EngineCapacity", "TeamName", "ParticipantID" }, null, new[]{ typeof(global::Com.Ubb.Protocolbuffers.BikeContestRequest.Types.Type) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Ubb.Protocolbuffers.BikeContestResponse), global::Com.Ubb.Protocolbuffers.BikeContestResponse.Parser, new[]{ "Type", "Participants", "Teams", "Entries", "ErrorMessage", "Participant", "RaceDTO", "Team", "User", "Race", "Races", "RacesDTO" }, null, new[]{ typeof(global::Com.Ubb.Protocolbuffers.BikeContestResponse.Types.Type) }, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class Participant : pb::IMessage<Participant>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Participant> _parser = new pb::MessageParser<Participant>(() => new Participant());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Participant> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Ubb.Protocolbuffers.BikeContestProtocolReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Participant() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Participant(Participant other) : this() {
      id_ = other.id_;
      firstName_ = other.firstName_;
      lastName_ = other.lastName_;
      engineCapacity_ = other.engineCapacity_;
      teamID_ = other.teamID_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Participant Clone() {
      return new Participant(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private long id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "firstName" field.</summary>
    public const int FirstNameFieldNumber = 2;
    private string firstName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string FirstName {
      get { return firstName_; }
      set {
        firstName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "lastName" field.</summary>
    public const int LastNameFieldNumber = 3;
    private string lastName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string LastName {
      get { return lastName_; }
      set {
        lastName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "engineCapacity" field.</summary>
    public const int EngineCapacityFieldNumber = 4;
    private int engineCapacity_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int EngineCapacity {
      get { return engineCapacity_; }
      set {
        engineCapacity_ = value;
      }
    }

    /// <summary>Field number for the "teamID" field.</summary>
    public const int TeamIDFieldNumber = 5;
    private long teamID_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long TeamID {
      get { return teamID_; }
      set {
        teamID_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Participant);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Participant other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (FirstName != other.FirstName) return false;
      if (LastName != other.LastName) return false;
      if (EngineCapacity != other.EngineCapacity) return false;
      if (TeamID != other.TeamID) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0L) hash ^= Id.GetHashCode();
      if (FirstName.Length != 0) hash ^= FirstName.GetHashCode();
      if (LastName.Length != 0) hash ^= LastName.GetHashCode();
      if (EngineCapacity != 0) hash ^= EngineCapacity.GetHashCode();
      if (TeamID != 0L) hash ^= TeamID.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Id);
      }
      if (FirstName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(FirstName);
      }
      if (LastName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(LastName);
      }
      if (EngineCapacity != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(EngineCapacity);
      }
      if (TeamID != 0L) {
        output.WriteRawTag(40);
        output.WriteInt64(TeamID);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Id);
      }
      if (FirstName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(FirstName);
      }
      if (LastName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(LastName);
      }
      if (EngineCapacity != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(EngineCapacity);
      }
      if (TeamID != 0L) {
        output.WriteRawTag(40);
        output.WriteInt64(TeamID);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Id);
      }
      if (FirstName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FirstName);
      }
      if (LastName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LastName);
      }
      if (EngineCapacity != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(EngineCapacity);
      }
      if (TeamID != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(TeamID);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Participant other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0L) {
        Id = other.Id;
      }
      if (other.FirstName.Length != 0) {
        FirstName = other.FirstName;
      }
      if (other.LastName.Length != 0) {
        LastName = other.LastName;
      }
      if (other.EngineCapacity != 0) {
        EngineCapacity = other.EngineCapacity;
      }
      if (other.TeamID != 0L) {
        TeamID = other.TeamID;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt64();
            break;
          }
          case 18: {
            FirstName = input.ReadString();
            break;
          }
          case 26: {
            LastName = input.ReadString();
            break;
          }
          case 32: {
            EngineCapacity = input.ReadInt32();
            break;
          }
          case 40: {
            TeamID = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt64();
            break;
          }
          case 18: {
            FirstName = input.ReadString();
            break;
          }
          case 26: {
            LastName = input.ReadString();
            break;
          }
          case 32: {
            EngineCapacity = input.ReadInt32();
            break;
          }
          case 40: {
            TeamID = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Race : pb::IMessage<Race>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Race> _parser = new pb::MessageParser<Race>(() => new Race());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Race> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Ubb.Protocolbuffers.BikeContestProtocolReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Race() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Race(Race other) : this() {
      id_ = other.id_;
      name_ = other.name_;
      engineCapacity_ = other.engineCapacity_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Race Clone() {
      return new Race(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private long id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "engineCapacity" field.</summary>
    public const int EngineCapacityFieldNumber = 3;
    private int engineCapacity_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int EngineCapacity {
      get { return engineCapacity_; }
      set {
        engineCapacity_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Race);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Race other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Name != other.Name) return false;
      if (EngineCapacity != other.EngineCapacity) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0L) hash ^= Id.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (EngineCapacity != 0) hash ^= EngineCapacity.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Id);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (EngineCapacity != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(EngineCapacity);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Id);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (EngineCapacity != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(EngineCapacity);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Id);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (EngineCapacity != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(EngineCapacity);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Race other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0L) {
        Id = other.Id;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.EngineCapacity != 0) {
        EngineCapacity = other.EngineCapacity;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt64();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 24: {
            EngineCapacity = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt64();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 24: {
            EngineCapacity = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class RaceEntry : pb::IMessage<RaceEntry>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RaceEntry> _parser = new pb::MessageParser<RaceEntry>(() => new RaceEntry());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<RaceEntry> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Ubb.Protocolbuffers.BikeContestProtocolReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RaceEntry() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RaceEntry(RaceEntry other) : this() {
      id_ = other.id_;
      participant_ = other.participant_ != null ? other.participant_.Clone() : null;
      race_ = other.race_ != null ? other.race_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RaceEntry Clone() {
      return new RaceEntry(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private long id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "participant" field.</summary>
    public const int ParticipantFieldNumber = 2;
    private global::Com.Ubb.Protocolbuffers.Participant participant_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Com.Ubb.Protocolbuffers.Participant Participant {
      get { return participant_; }
      set {
        participant_ = value;
      }
    }

    /// <summary>Field number for the "race" field.</summary>
    public const int RaceFieldNumber = 3;
    private global::Com.Ubb.Protocolbuffers.Race race_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Com.Ubb.Protocolbuffers.Race Race {
      get { return race_; }
      set {
        race_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as RaceEntry);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(RaceEntry other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (!object.Equals(Participant, other.Participant)) return false;
      if (!object.Equals(Race, other.Race)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0L) hash ^= Id.GetHashCode();
      if (participant_ != null) hash ^= Participant.GetHashCode();
      if (race_ != null) hash ^= Race.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Id);
      }
      if (participant_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Participant);
      }
      if (race_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Race);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Id);
      }
      if (participant_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Participant);
      }
      if (race_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Race);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Id);
      }
      if (participant_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Participant);
      }
      if (race_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Race);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(RaceEntry other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0L) {
        Id = other.Id;
      }
      if (other.participant_ != null) {
        if (participant_ == null) {
          Participant = new global::Com.Ubb.Protocolbuffers.Participant();
        }
        Participant.MergeFrom(other.Participant);
      }
      if (other.race_ != null) {
        if (race_ == null) {
          Race = new global::Com.Ubb.Protocolbuffers.Race();
        }
        Race.MergeFrom(other.Race);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt64();
            break;
          }
          case 18: {
            if (participant_ == null) {
              Participant = new global::Com.Ubb.Protocolbuffers.Participant();
            }
            input.ReadMessage(Participant);
            break;
          }
          case 26: {
            if (race_ == null) {
              Race = new global::Com.Ubb.Protocolbuffers.Race();
            }
            input.ReadMessage(Race);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt64();
            break;
          }
          case 18: {
            if (participant_ == null) {
              Participant = new global::Com.Ubb.Protocolbuffers.Participant();
            }
            input.ReadMessage(Participant);
            break;
          }
          case 26: {
            if (race_ == null) {
              Race = new global::Com.Ubb.Protocolbuffers.Race();
            }
            input.ReadMessage(Race);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Team : pb::IMessage<Team>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Team> _parser = new pb::MessageParser<Team>(() => new Team());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Team> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Ubb.Protocolbuffers.BikeContestProtocolReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Team() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Team(Team other) : this() {
      id_ = other.id_;
      name_ = other.name_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Team Clone() {
      return new Team(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private long id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Team);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Team other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Name != other.Name) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0L) hash ^= Id.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Id);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Id);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Id);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Team other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0L) {
        Id = other.Id;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt64();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt64();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class User : pb::IMessage<User>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<User> _parser = new pb::MessageParser<User>(() => new User());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<User> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Ubb.Protocolbuffers.BikeContestProtocolReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public User() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public User(User other) : this() {
      id_ = other.id_;
      username_ = other.username_;
      fullName_ = other.fullName_;
      passwordToken_ = other.passwordToken_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public User Clone() {
      return new User(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private long id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "username" field.</summary>
    public const int UsernameFieldNumber = 2;
    private string username_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Username {
      get { return username_; }
      set {
        username_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "fullName" field.</summary>
    public const int FullNameFieldNumber = 3;
    private string fullName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string FullName {
      get { return fullName_; }
      set {
        fullName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "passwordToken" field.</summary>
    public const int PasswordTokenFieldNumber = 4;
    private string passwordToken_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string PasswordToken {
      get { return passwordToken_; }
      set {
        passwordToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as User);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(User other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Username != other.Username) return false;
      if (FullName != other.FullName) return false;
      if (PasswordToken != other.PasswordToken) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0L) hash ^= Id.GetHashCode();
      if (Username.Length != 0) hash ^= Username.GetHashCode();
      if (FullName.Length != 0) hash ^= FullName.GetHashCode();
      if (PasswordToken.Length != 0) hash ^= PasswordToken.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Id);
      }
      if (Username.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Username);
      }
      if (FullName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(FullName);
      }
      if (PasswordToken.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(PasswordToken);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Id);
      }
      if (Username.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Username);
      }
      if (FullName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(FullName);
      }
      if (PasswordToken.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(PasswordToken);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Id);
      }
      if (Username.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Username);
      }
      if (FullName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FullName);
      }
      if (PasswordToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PasswordToken);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(User other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0L) {
        Id = other.Id;
      }
      if (other.Username.Length != 0) {
        Username = other.Username;
      }
      if (other.FullName.Length != 0) {
        FullName = other.FullName;
      }
      if (other.PasswordToken.Length != 0) {
        PasswordToken = other.PasswordToken;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt64();
            break;
          }
          case 18: {
            Username = input.ReadString();
            break;
          }
          case 26: {
            FullName = input.ReadString();
            break;
          }
          case 34: {
            PasswordToken = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt64();
            break;
          }
          case 18: {
            Username = input.ReadString();
            break;
          }
          case 26: {
            FullName = input.ReadString();
            break;
          }
          case 34: {
            PasswordToken = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class RaceDTO : pb::IMessage<RaceDTO>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RaceDTO> _parser = new pb::MessageParser<RaceDTO>(() => new RaceDTO());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<RaceDTO> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Ubb.Protocolbuffers.BikeContestProtocolReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RaceDTO() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RaceDTO(RaceDTO other) : this() {
      name_ = other.name_;
      engineCapacity_ = other.engineCapacity_;
      participants_ = other.participants_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RaceDTO Clone() {
      return new RaceDTO(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "engineCapacity" field.</summary>
    public const int EngineCapacityFieldNumber = 2;
    private int engineCapacity_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int EngineCapacity {
      get { return engineCapacity_; }
      set {
        engineCapacity_ = value;
      }
    }

    /// <summary>Field number for the "participants" field.</summary>
    public const int ParticipantsFieldNumber = 3;
    private int participants_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Participants {
      get { return participants_; }
      set {
        participants_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as RaceDTO);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(RaceDTO other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (EngineCapacity != other.EngineCapacity) return false;
      if (Participants != other.Participants) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (EngineCapacity != 0) hash ^= EngineCapacity.GetHashCode();
      if (Participants != 0) hash ^= Participants.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (EngineCapacity != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(EngineCapacity);
      }
      if (Participants != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Participants);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (EngineCapacity != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(EngineCapacity);
      }
      if (Participants != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Participants);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (EngineCapacity != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(EngineCapacity);
      }
      if (Participants != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Participants);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(RaceDTO other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.EngineCapacity != 0) {
        EngineCapacity = other.EngineCapacity;
      }
      if (other.Participants != 0) {
        Participants = other.Participants;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 16: {
            EngineCapacity = input.ReadInt32();
            break;
          }
          case 24: {
            Participants = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 16: {
            EngineCapacity = input.ReadInt32();
            break;
          }
          case 24: {
            Participants = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class BikeContestRequest : pb::IMessage<BikeContestRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<BikeContestRequest> _parser = new pb::MessageParser<BikeContestRequest>(() => new BikeContestRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<BikeContestRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Ubb.Protocolbuffers.BikeContestProtocolReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BikeContestRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BikeContestRequest(BikeContestRequest other) : this() {
      type_ = other.type_;
      username_ = other.username_;
      passwordToken_ = other.passwordToken_;
      user_ = other.user_ != null ? other.user_.Clone() : null;
      participant_ = other.participant_ != null ? other.participant_.Clone() : null;
      raceEntries_ = other.raceEntries_.Clone();
      race_ = other.race_ != null ? other.race_.Clone() : null;
      team_ = other.team_ != null ? other.team_.Clone() : null;
      raceID_ = other.raceID_;
      teamID_ = other.teamID_;
      raceName_ = other.raceName_;
      engineCapacity_ = other.engineCapacity_;
      teamName_ = other.teamName_;
      participantID_ = other.participantID_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BikeContestRequest Clone() {
      return new BikeContestRequest(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private global::Com.Ubb.Protocolbuffers.BikeContestRequest.Types.Type type_ = global::Com.Ubb.Protocolbuffers.BikeContestRequest.Types.Type.Unknown;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Com.Ubb.Protocolbuffers.BikeContestRequest.Types.Type Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "username" field.</summary>
    public const int UsernameFieldNumber = 2;
    private string username_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Username {
      get { return username_; }
      set {
        username_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "passwordToken" field.</summary>
    public const int PasswordTokenFieldNumber = 3;
    private string passwordToken_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string PasswordToken {
      get { return passwordToken_; }
      set {
        passwordToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "user" field.</summary>
    public const int UserFieldNumber = 4;
    private global::Com.Ubb.Protocolbuffers.User user_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Com.Ubb.Protocolbuffers.User User {
      get { return user_; }
      set {
        user_ = value;
      }
    }

    /// <summary>Field number for the "participant" field.</summary>
    public const int ParticipantFieldNumber = 5;
    private global::Com.Ubb.Protocolbuffers.Participant participant_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Com.Ubb.Protocolbuffers.Participant Participant {
      get { return participant_; }
      set {
        participant_ = value;
      }
    }

    /// <summary>Field number for the "raceEntries" field.</summary>
    public const int RaceEntriesFieldNumber = 6;
    private static readonly pb::FieldCodec<global::Com.Ubb.Protocolbuffers.RaceEntry> _repeated_raceEntries_codec
        = pb::FieldCodec.ForMessage(50, global::Com.Ubb.Protocolbuffers.RaceEntry.Parser);
    private readonly pbc::RepeatedField<global::Com.Ubb.Protocolbuffers.RaceEntry> raceEntries_ = new pbc::RepeatedField<global::Com.Ubb.Protocolbuffers.RaceEntry>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Com.Ubb.Protocolbuffers.RaceEntry> RaceEntries {
      get { return raceEntries_; }
    }

    /// <summary>Field number for the "race" field.</summary>
    public const int RaceFieldNumber = 7;
    private global::Com.Ubb.Protocolbuffers.Race race_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Com.Ubb.Protocolbuffers.Race Race {
      get { return race_; }
      set {
        race_ = value;
      }
    }

    /// <summary>Field number for the "team" field.</summary>
    public const int TeamFieldNumber = 8;
    private global::Com.Ubb.Protocolbuffers.Team team_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Com.Ubb.Protocolbuffers.Team Team {
      get { return team_; }
      set {
        team_ = value;
      }
    }

    /// <summary>Field number for the "raceID" field.</summary>
    public const int RaceIDFieldNumber = 9;
    private long raceID_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long RaceID {
      get { return raceID_; }
      set {
        raceID_ = value;
      }
    }

    /// <summary>Field number for the "teamID" field.</summary>
    public const int TeamIDFieldNumber = 10;
    private long teamID_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long TeamID {
      get { return teamID_; }
      set {
        teamID_ = value;
      }
    }

    /// <summary>Field number for the "raceName" field.</summary>
    public const int RaceNameFieldNumber = 11;
    private string raceName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string RaceName {
      get { return raceName_; }
      set {
        raceName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "engineCapacity" field.</summary>
    public const int EngineCapacityFieldNumber = 12;
    private int engineCapacity_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int EngineCapacity {
      get { return engineCapacity_; }
      set {
        engineCapacity_ = value;
      }
    }

    /// <summary>Field number for the "teamName" field.</summary>
    public const int TeamNameFieldNumber = 13;
    private string teamName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string TeamName {
      get { return teamName_; }
      set {
        teamName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "participantID" field.</summary>
    public const int ParticipantIDFieldNumber = 14;
    private long participantID_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long ParticipantID {
      get { return participantID_; }
      set {
        participantID_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as BikeContestRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(BikeContestRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (Username != other.Username) return false;
      if (PasswordToken != other.PasswordToken) return false;
      if (!object.Equals(User, other.User)) return false;
      if (!object.Equals(Participant, other.Participant)) return false;
      if(!raceEntries_.Equals(other.raceEntries_)) return false;
      if (!object.Equals(Race, other.Race)) return false;
      if (!object.Equals(Team, other.Team)) return false;
      if (RaceID != other.RaceID) return false;
      if (TeamID != other.TeamID) return false;
      if (RaceName != other.RaceName) return false;
      if (EngineCapacity != other.EngineCapacity) return false;
      if (TeamName != other.TeamName) return false;
      if (ParticipantID != other.ParticipantID) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != global::Com.Ubb.Protocolbuffers.BikeContestRequest.Types.Type.Unknown) hash ^= Type.GetHashCode();
      if (Username.Length != 0) hash ^= Username.GetHashCode();
      if (PasswordToken.Length != 0) hash ^= PasswordToken.GetHashCode();
      if (user_ != null) hash ^= User.GetHashCode();
      if (participant_ != null) hash ^= Participant.GetHashCode();
      hash ^= raceEntries_.GetHashCode();
      if (race_ != null) hash ^= Race.GetHashCode();
      if (team_ != null) hash ^= Team.GetHashCode();
      if (RaceID != 0L) hash ^= RaceID.GetHashCode();
      if (TeamID != 0L) hash ^= TeamID.GetHashCode();
      if (RaceName.Length != 0) hash ^= RaceName.GetHashCode();
      if (EngineCapacity != 0) hash ^= EngineCapacity.GetHashCode();
      if (TeamName.Length != 0) hash ^= TeamName.GetHashCode();
      if (ParticipantID != 0L) hash ^= ParticipantID.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Type != global::Com.Ubb.Protocolbuffers.BikeContestRequest.Types.Type.Unknown) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      if (Username.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Username);
      }
      if (PasswordToken.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(PasswordToken);
      }
      if (user_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(User);
      }
      if (participant_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Participant);
      }
      raceEntries_.WriteTo(output, _repeated_raceEntries_codec);
      if (race_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(Race);
      }
      if (team_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(Team);
      }
      if (RaceID != 0L) {
        output.WriteRawTag(72);
        output.WriteInt64(RaceID);
      }
      if (TeamID != 0L) {
        output.WriteRawTag(80);
        output.WriteInt64(TeamID);
      }
      if (RaceName.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(RaceName);
      }
      if (EngineCapacity != 0) {
        output.WriteRawTag(96);
        output.WriteInt32(EngineCapacity);
      }
      if (TeamName.Length != 0) {
        output.WriteRawTag(106);
        output.WriteString(TeamName);
      }
      if (ParticipantID != 0L) {
        output.WriteRawTag(112);
        output.WriteInt64(ParticipantID);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Type != global::Com.Ubb.Protocolbuffers.BikeContestRequest.Types.Type.Unknown) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      if (Username.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Username);
      }
      if (PasswordToken.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(PasswordToken);
      }
      if (user_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(User);
      }
      if (participant_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Participant);
      }
      raceEntries_.WriteTo(ref output, _repeated_raceEntries_codec);
      if (race_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(Race);
      }
      if (team_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(Team);
      }
      if (RaceID != 0L) {
        output.WriteRawTag(72);
        output.WriteInt64(RaceID);
      }
      if (TeamID != 0L) {
        output.WriteRawTag(80);
        output.WriteInt64(TeamID);
      }
      if (RaceName.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(RaceName);
      }
      if (EngineCapacity != 0) {
        output.WriteRawTag(96);
        output.WriteInt32(EngineCapacity);
      }
      if (TeamName.Length != 0) {
        output.WriteRawTag(106);
        output.WriteString(TeamName);
      }
      if (ParticipantID != 0L) {
        output.WriteRawTag(112);
        output.WriteInt64(ParticipantID);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Type != global::Com.Ubb.Protocolbuffers.BikeContestRequest.Types.Type.Unknown) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (Username.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Username);
      }
      if (PasswordToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PasswordToken);
      }
      if (user_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(User);
      }
      if (participant_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Participant);
      }
      size += raceEntries_.CalculateSize(_repeated_raceEntries_codec);
      if (race_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Race);
      }
      if (team_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Team);
      }
      if (RaceID != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(RaceID);
      }
      if (TeamID != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(TeamID);
      }
      if (RaceName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RaceName);
      }
      if (EngineCapacity != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(EngineCapacity);
      }
      if (TeamName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TeamName);
      }
      if (ParticipantID != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ParticipantID);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(BikeContestRequest other) {
      if (other == null) {
        return;
      }
      if (other.Type != global::Com.Ubb.Protocolbuffers.BikeContestRequest.Types.Type.Unknown) {
        Type = other.Type;
      }
      if (other.Username.Length != 0) {
        Username = other.Username;
      }
      if (other.PasswordToken.Length != 0) {
        PasswordToken = other.PasswordToken;
      }
      if (other.user_ != null) {
        if (user_ == null) {
          User = new global::Com.Ubb.Protocolbuffers.User();
        }
        User.MergeFrom(other.User);
      }
      if (other.participant_ != null) {
        if (participant_ == null) {
          Participant = new global::Com.Ubb.Protocolbuffers.Participant();
        }
        Participant.MergeFrom(other.Participant);
      }
      raceEntries_.Add(other.raceEntries_);
      if (other.race_ != null) {
        if (race_ == null) {
          Race = new global::Com.Ubb.Protocolbuffers.Race();
        }
        Race.MergeFrom(other.Race);
      }
      if (other.team_ != null) {
        if (team_ == null) {
          Team = new global::Com.Ubb.Protocolbuffers.Team();
        }
        Team.MergeFrom(other.Team);
      }
      if (other.RaceID != 0L) {
        RaceID = other.RaceID;
      }
      if (other.TeamID != 0L) {
        TeamID = other.TeamID;
      }
      if (other.RaceName.Length != 0) {
        RaceName = other.RaceName;
      }
      if (other.EngineCapacity != 0) {
        EngineCapacity = other.EngineCapacity;
      }
      if (other.TeamName.Length != 0) {
        TeamName = other.TeamName;
      }
      if (other.ParticipantID != 0L) {
        ParticipantID = other.ParticipantID;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = (global::Com.Ubb.Protocolbuffers.BikeContestRequest.Types.Type) input.ReadEnum();
            break;
          }
          case 18: {
            Username = input.ReadString();
            break;
          }
          case 26: {
            PasswordToken = input.ReadString();
            break;
          }
          case 34: {
            if (user_ == null) {
              User = new global::Com.Ubb.Protocolbuffers.User();
            }
            input.ReadMessage(User);
            break;
          }
          case 42: {
            if (participant_ == null) {
              Participant = new global::Com.Ubb.Protocolbuffers.Participant();
            }
            input.ReadMessage(Participant);
            break;
          }
          case 50: {
            raceEntries_.AddEntriesFrom(input, _repeated_raceEntries_codec);
            break;
          }
          case 58: {
            if (race_ == null) {
              Race = new global::Com.Ubb.Protocolbuffers.Race();
            }
            input.ReadMessage(Race);
            break;
          }
          case 66: {
            if (team_ == null) {
              Team = new global::Com.Ubb.Protocolbuffers.Team();
            }
            input.ReadMessage(Team);
            break;
          }
          case 72: {
            RaceID = input.ReadInt64();
            break;
          }
          case 80: {
            TeamID = input.ReadInt64();
            break;
          }
          case 90: {
            RaceName = input.ReadString();
            break;
          }
          case 96: {
            EngineCapacity = input.ReadInt32();
            break;
          }
          case 106: {
            TeamName = input.ReadString();
            break;
          }
          case 112: {
            ParticipantID = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Type = (global::Com.Ubb.Protocolbuffers.BikeContestRequest.Types.Type) input.ReadEnum();
            break;
          }
          case 18: {
            Username = input.ReadString();
            break;
          }
          case 26: {
            PasswordToken = input.ReadString();
            break;
          }
          case 34: {
            if (user_ == null) {
              User = new global::Com.Ubb.Protocolbuffers.User();
            }
            input.ReadMessage(User);
            break;
          }
          case 42: {
            if (participant_ == null) {
              Participant = new global::Com.Ubb.Protocolbuffers.Participant();
            }
            input.ReadMessage(Participant);
            break;
          }
          case 50: {
            raceEntries_.AddEntriesFrom(ref input, _repeated_raceEntries_codec);
            break;
          }
          case 58: {
            if (race_ == null) {
              Race = new global::Com.Ubb.Protocolbuffers.Race();
            }
            input.ReadMessage(Race);
            break;
          }
          case 66: {
            if (team_ == null) {
              Team = new global::Com.Ubb.Protocolbuffers.Team();
            }
            input.ReadMessage(Team);
            break;
          }
          case 72: {
            RaceID = input.ReadInt64();
            break;
          }
          case 80: {
            TeamID = input.ReadInt64();
            break;
          }
          case 90: {
            RaceName = input.ReadString();
            break;
          }
          case 96: {
            EngineCapacity = input.ReadInt32();
            break;
          }
          case 106: {
            TeamName = input.ReadString();
            break;
          }
          case 112: {
            ParticipantID = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the BikeContestRequest message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      public enum Type {
        [pbr::OriginalName("Unknown")] Unknown = 0,
        [pbr::OriginalName("Login")] Login = 1,
        [pbr::OriginalName("Logout")] Logout = 2,
        [pbr::OriginalName("CreateParticipant")] CreateParticipant = 3,
        [pbr::OriginalName("CreateRaceEntries")] CreateRaceEntries = 4,
        [pbr::OriginalName("CreateRace")] CreateRace = 5,
        [pbr::OriginalName("CreateTeam")] CreateTeam = 6,
        [pbr::OriginalName("GetEntriesByRace")] GetEntriesByRace = 7,
        [pbr::OriginalName("GetParticipantByData")] GetParticipantByData = 8,
        [pbr::OriginalName("GetParticipantsByTeam")] GetParticipantsByTeam = 9,
        [pbr::OriginalName("GetParticipants")] GetParticipants = 10,
        [pbr::OriginalName("GetRaceByName")] GetRaceByName = 11,
        [pbr::OriginalName("GetRacesByEngineCapacity")] GetRacesByEngineCapacity = 12,
        [pbr::OriginalName("GetRacesWithParticipantCount")] GetRacesWithParticipantCount = 13,
        [pbr::OriginalName("GetTeamByName")] GetTeamByName = 14,
        [pbr::OriginalName("GetTeams")] GetTeams = 15,
        [pbr::OriginalName("GetUnregisteredRaces")] GetUnregisteredRaces = 16,
      }

    }
    #endregion

  }

  public sealed partial class BikeContestResponse : pb::IMessage<BikeContestResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<BikeContestResponse> _parser = new pb::MessageParser<BikeContestResponse>(() => new BikeContestResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<BikeContestResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Ubb.Protocolbuffers.BikeContestProtocolReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BikeContestResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BikeContestResponse(BikeContestResponse other) : this() {
      type_ = other.type_;
      participants_ = other.participants_.Clone();
      teams_ = other.teams_.Clone();
      entries_ = other.entries_.Clone();
      errorMessage_ = other.errorMessage_;
      participant_ = other.participant_ != null ? other.participant_.Clone() : null;
      raceDTO_ = other.raceDTO_ != null ? other.raceDTO_.Clone() : null;
      team_ = other.team_ != null ? other.team_.Clone() : null;
      user_ = other.user_ != null ? other.user_.Clone() : null;
      race_ = other.race_ != null ? other.race_.Clone() : null;
      races_ = other.races_.Clone();
      racesDTO_ = other.racesDTO_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BikeContestResponse Clone() {
      return new BikeContestResponse(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private global::Com.Ubb.Protocolbuffers.BikeContestResponse.Types.Type type_ = global::Com.Ubb.Protocolbuffers.BikeContestResponse.Types.Type.Unknown;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Com.Ubb.Protocolbuffers.BikeContestResponse.Types.Type Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "participants" field.</summary>
    public const int ParticipantsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Com.Ubb.Protocolbuffers.Participant> _repeated_participants_codec
        = pb::FieldCodec.ForMessage(18, global::Com.Ubb.Protocolbuffers.Participant.Parser);
    private readonly pbc::RepeatedField<global::Com.Ubb.Protocolbuffers.Participant> participants_ = new pbc::RepeatedField<global::Com.Ubb.Protocolbuffers.Participant>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Com.Ubb.Protocolbuffers.Participant> Participants {
      get { return participants_; }
    }

    /// <summary>Field number for the "teams" field.</summary>
    public const int TeamsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Com.Ubb.Protocolbuffers.Team> _repeated_teams_codec
        = pb::FieldCodec.ForMessage(26, global::Com.Ubb.Protocolbuffers.Team.Parser);
    private readonly pbc::RepeatedField<global::Com.Ubb.Protocolbuffers.Team> teams_ = new pbc::RepeatedField<global::Com.Ubb.Protocolbuffers.Team>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Com.Ubb.Protocolbuffers.Team> Teams {
      get { return teams_; }
    }

    /// <summary>Field number for the "entries" field.</summary>
    public const int EntriesFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Com.Ubb.Protocolbuffers.RaceEntry> _repeated_entries_codec
        = pb::FieldCodec.ForMessage(34, global::Com.Ubb.Protocolbuffers.RaceEntry.Parser);
    private readonly pbc::RepeatedField<global::Com.Ubb.Protocolbuffers.RaceEntry> entries_ = new pbc::RepeatedField<global::Com.Ubb.Protocolbuffers.RaceEntry>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Com.Ubb.Protocolbuffers.RaceEntry> Entries {
      get { return entries_; }
    }

    /// <summary>Field number for the "errorMessage" field.</summary>
    public const int ErrorMessageFieldNumber = 5;
    private string errorMessage_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ErrorMessage {
      get { return errorMessage_; }
      set {
        errorMessage_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "participant" field.</summary>
    public const int ParticipantFieldNumber = 6;
    private global::Com.Ubb.Protocolbuffers.Participant participant_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Com.Ubb.Protocolbuffers.Participant Participant {
      get { return participant_; }
      set {
        participant_ = value;
      }
    }

    /// <summary>Field number for the "raceDTO" field.</summary>
    public const int RaceDTOFieldNumber = 7;
    private global::Com.Ubb.Protocolbuffers.RaceDTO raceDTO_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Com.Ubb.Protocolbuffers.RaceDTO RaceDTO {
      get { return raceDTO_; }
      set {
        raceDTO_ = value;
      }
    }

    /// <summary>Field number for the "team" field.</summary>
    public const int TeamFieldNumber = 8;
    private global::Com.Ubb.Protocolbuffers.Team team_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Com.Ubb.Protocolbuffers.Team Team {
      get { return team_; }
      set {
        team_ = value;
      }
    }

    /// <summary>Field number for the "user" field.</summary>
    public const int UserFieldNumber = 9;
    private global::Com.Ubb.Protocolbuffers.User user_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Com.Ubb.Protocolbuffers.User User {
      get { return user_; }
      set {
        user_ = value;
      }
    }

    /// <summary>Field number for the "race" field.</summary>
    public const int RaceFieldNumber = 10;
    private global::Com.Ubb.Protocolbuffers.Race race_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Com.Ubb.Protocolbuffers.Race Race {
      get { return race_; }
      set {
        race_ = value;
      }
    }

    /// <summary>Field number for the "races" field.</summary>
    public const int RacesFieldNumber = 11;
    private static readonly pb::FieldCodec<global::Com.Ubb.Protocolbuffers.Race> _repeated_races_codec
        = pb::FieldCodec.ForMessage(90, global::Com.Ubb.Protocolbuffers.Race.Parser);
    private readonly pbc::RepeatedField<global::Com.Ubb.Protocolbuffers.Race> races_ = new pbc::RepeatedField<global::Com.Ubb.Protocolbuffers.Race>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Com.Ubb.Protocolbuffers.Race> Races {
      get { return races_; }
    }

    /// <summary>Field number for the "racesDTO" field.</summary>
    public const int RacesDTOFieldNumber = 12;
    private static readonly pb::FieldCodec<global::Com.Ubb.Protocolbuffers.RaceDTO> _repeated_racesDTO_codec
        = pb::FieldCodec.ForMessage(98, global::Com.Ubb.Protocolbuffers.RaceDTO.Parser);
    private readonly pbc::RepeatedField<global::Com.Ubb.Protocolbuffers.RaceDTO> racesDTO_ = new pbc::RepeatedField<global::Com.Ubb.Protocolbuffers.RaceDTO>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Com.Ubb.Protocolbuffers.RaceDTO> RacesDTO {
      get { return racesDTO_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as BikeContestResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(BikeContestResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if(!participants_.Equals(other.participants_)) return false;
      if(!teams_.Equals(other.teams_)) return false;
      if(!entries_.Equals(other.entries_)) return false;
      if (ErrorMessage != other.ErrorMessage) return false;
      if (!object.Equals(Participant, other.Participant)) return false;
      if (!object.Equals(RaceDTO, other.RaceDTO)) return false;
      if (!object.Equals(Team, other.Team)) return false;
      if (!object.Equals(User, other.User)) return false;
      if (!object.Equals(Race, other.Race)) return false;
      if(!races_.Equals(other.races_)) return false;
      if(!racesDTO_.Equals(other.racesDTO_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != global::Com.Ubb.Protocolbuffers.BikeContestResponse.Types.Type.Unknown) hash ^= Type.GetHashCode();
      hash ^= participants_.GetHashCode();
      hash ^= teams_.GetHashCode();
      hash ^= entries_.GetHashCode();
      if (ErrorMessage.Length != 0) hash ^= ErrorMessage.GetHashCode();
      if (participant_ != null) hash ^= Participant.GetHashCode();
      if (raceDTO_ != null) hash ^= RaceDTO.GetHashCode();
      if (team_ != null) hash ^= Team.GetHashCode();
      if (user_ != null) hash ^= User.GetHashCode();
      if (race_ != null) hash ^= Race.GetHashCode();
      hash ^= races_.GetHashCode();
      hash ^= racesDTO_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Type != global::Com.Ubb.Protocolbuffers.BikeContestResponse.Types.Type.Unknown) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      participants_.WriteTo(output, _repeated_participants_codec);
      teams_.WriteTo(output, _repeated_teams_codec);
      entries_.WriteTo(output, _repeated_entries_codec);
      if (ErrorMessage.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(ErrorMessage);
      }
      if (participant_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(Participant);
      }
      if (raceDTO_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(RaceDTO);
      }
      if (team_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(Team);
      }
      if (user_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(User);
      }
      if (race_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(Race);
      }
      races_.WriteTo(output, _repeated_races_codec);
      racesDTO_.WriteTo(output, _repeated_racesDTO_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Type != global::Com.Ubb.Protocolbuffers.BikeContestResponse.Types.Type.Unknown) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      participants_.WriteTo(ref output, _repeated_participants_codec);
      teams_.WriteTo(ref output, _repeated_teams_codec);
      entries_.WriteTo(ref output, _repeated_entries_codec);
      if (ErrorMessage.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(ErrorMessage);
      }
      if (participant_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(Participant);
      }
      if (raceDTO_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(RaceDTO);
      }
      if (team_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(Team);
      }
      if (user_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(User);
      }
      if (race_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(Race);
      }
      races_.WriteTo(ref output, _repeated_races_codec);
      racesDTO_.WriteTo(ref output, _repeated_racesDTO_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Type != global::Com.Ubb.Protocolbuffers.BikeContestResponse.Types.Type.Unknown) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      size += participants_.CalculateSize(_repeated_participants_codec);
      size += teams_.CalculateSize(_repeated_teams_codec);
      size += entries_.CalculateSize(_repeated_entries_codec);
      if (ErrorMessage.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ErrorMessage);
      }
      if (participant_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Participant);
      }
      if (raceDTO_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RaceDTO);
      }
      if (team_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Team);
      }
      if (user_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(User);
      }
      if (race_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Race);
      }
      size += races_.CalculateSize(_repeated_races_codec);
      size += racesDTO_.CalculateSize(_repeated_racesDTO_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(BikeContestResponse other) {
      if (other == null) {
        return;
      }
      if (other.Type != global::Com.Ubb.Protocolbuffers.BikeContestResponse.Types.Type.Unknown) {
        Type = other.Type;
      }
      participants_.Add(other.participants_);
      teams_.Add(other.teams_);
      entries_.Add(other.entries_);
      if (other.ErrorMessage.Length != 0) {
        ErrorMessage = other.ErrorMessage;
      }
      if (other.participant_ != null) {
        if (participant_ == null) {
          Participant = new global::Com.Ubb.Protocolbuffers.Participant();
        }
        Participant.MergeFrom(other.Participant);
      }
      if (other.raceDTO_ != null) {
        if (raceDTO_ == null) {
          RaceDTO = new global::Com.Ubb.Protocolbuffers.RaceDTO();
        }
        RaceDTO.MergeFrom(other.RaceDTO);
      }
      if (other.team_ != null) {
        if (team_ == null) {
          Team = new global::Com.Ubb.Protocolbuffers.Team();
        }
        Team.MergeFrom(other.Team);
      }
      if (other.user_ != null) {
        if (user_ == null) {
          User = new global::Com.Ubb.Protocolbuffers.User();
        }
        User.MergeFrom(other.User);
      }
      if (other.race_ != null) {
        if (race_ == null) {
          Race = new global::Com.Ubb.Protocolbuffers.Race();
        }
        Race.MergeFrom(other.Race);
      }
      races_.Add(other.races_);
      racesDTO_.Add(other.racesDTO_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = (global::Com.Ubb.Protocolbuffers.BikeContestResponse.Types.Type) input.ReadEnum();
            break;
          }
          case 18: {
            participants_.AddEntriesFrom(input, _repeated_participants_codec);
            break;
          }
          case 26: {
            teams_.AddEntriesFrom(input, _repeated_teams_codec);
            break;
          }
          case 34: {
            entries_.AddEntriesFrom(input, _repeated_entries_codec);
            break;
          }
          case 42: {
            ErrorMessage = input.ReadString();
            break;
          }
          case 50: {
            if (participant_ == null) {
              Participant = new global::Com.Ubb.Protocolbuffers.Participant();
            }
            input.ReadMessage(Participant);
            break;
          }
          case 58: {
            if (raceDTO_ == null) {
              RaceDTO = new global::Com.Ubb.Protocolbuffers.RaceDTO();
            }
            input.ReadMessage(RaceDTO);
            break;
          }
          case 66: {
            if (team_ == null) {
              Team = new global::Com.Ubb.Protocolbuffers.Team();
            }
            input.ReadMessage(Team);
            break;
          }
          case 74: {
            if (user_ == null) {
              User = new global::Com.Ubb.Protocolbuffers.User();
            }
            input.ReadMessage(User);
            break;
          }
          case 82: {
            if (race_ == null) {
              Race = new global::Com.Ubb.Protocolbuffers.Race();
            }
            input.ReadMessage(Race);
            break;
          }
          case 90: {
            races_.AddEntriesFrom(input, _repeated_races_codec);
            break;
          }
          case 98: {
            racesDTO_.AddEntriesFrom(input, _repeated_racesDTO_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Type = (global::Com.Ubb.Protocolbuffers.BikeContestResponse.Types.Type) input.ReadEnum();
            break;
          }
          case 18: {
            participants_.AddEntriesFrom(ref input, _repeated_participants_codec);
            break;
          }
          case 26: {
            teams_.AddEntriesFrom(ref input, _repeated_teams_codec);
            break;
          }
          case 34: {
            entries_.AddEntriesFrom(ref input, _repeated_entries_codec);
            break;
          }
          case 42: {
            ErrorMessage = input.ReadString();
            break;
          }
          case 50: {
            if (participant_ == null) {
              Participant = new global::Com.Ubb.Protocolbuffers.Participant();
            }
            input.ReadMessage(Participant);
            break;
          }
          case 58: {
            if (raceDTO_ == null) {
              RaceDTO = new global::Com.Ubb.Protocolbuffers.RaceDTO();
            }
            input.ReadMessage(RaceDTO);
            break;
          }
          case 66: {
            if (team_ == null) {
              Team = new global::Com.Ubb.Protocolbuffers.Team();
            }
            input.ReadMessage(Team);
            break;
          }
          case 74: {
            if (user_ == null) {
              User = new global::Com.Ubb.Protocolbuffers.User();
            }
            input.ReadMessage(User);
            break;
          }
          case 82: {
            if (race_ == null) {
              Race = new global::Com.Ubb.Protocolbuffers.Race();
            }
            input.ReadMessage(Race);
            break;
          }
          case 90: {
            races_.AddEntriesFrom(ref input, _repeated_races_codec);
            break;
          }
          case 98: {
            racesDTO_.AddEntriesFrom(ref input, _repeated_racesDTO_codec);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the BikeContestResponse message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      public enum Type {
        [pbr::OriginalName("Unknown")] Unknown = 0,
        [pbr::OriginalName("Ok")] Ok = 1,
        [pbr::OriginalName("AllParticipants")] AllParticipants = 2,
        [pbr::OriginalName("AllTeams")] AllTeams = 3,
        [pbr::OriginalName("EntriesByRace")] EntriesByRace = 4,
        [pbr::OriginalName("Error")] Error = 5,
        [pbr::OriginalName("GetParticipantsByTeam")] GetParticipantsByTeam = 6,
        [pbr::OriginalName("NewParticipant")] NewParticipant = 7,
        [pbr::OriginalName("NewRace")] NewRace = 8,
        [pbr::OriginalName("NewTeam")] NewTeam = 9,
        [pbr::OriginalName("GetParticipant")] GetParticipant = 10,
        [pbr::OriginalName("RaceByName")] RaceByName = 11,
        [pbr::OriginalName("RacesByCapacity")] RacesByCapacity = 12,
        [pbr::OriginalName("RacesWithParticipants")] RacesWithParticipants = 13,
        [pbr::OriginalName("GetTeam")] GetTeam = 14,
        [pbr::OriginalName("UpdatedRaces")] UpdatedRaces = 15,
      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
